
                        BSD Notes by Baloi

================================================================================

Mon Jan 26 23:10:09 EST 2015

        I will log everything I did in this file. This entry will be the main 
page and all other entries will be from the newest to the oldest. If my goals
change then the main page will also change. Minimize size of main pages.

        I am creating a development machine from scratch using BSD, OpenBSD in 
this case. I plan to have a good configuration for vim, Python and C development 
for my needs. I need to be able to run my scheduling scripts from this machine. 
I need internet from LAN at least and from wifi optimally. It would be nice to 
have a nice working Gnome window manager if ever. Or I will just use tmux as my 
window manager.

        Needed: 
        * vim
        * good vim configuration
        * letter count in vim
        * syntax highlighting in vim
        * git?
        * internet connection           - fw_update and ifconfig solved this
        * file transfer 

        If not, I will write all my tools from scratch in C and in shell script. 
        Maybe this is what I will do.
        * No internet by default.
        * No emails
        * No browser
        * Just vim 
        * STUDY SOURCECODE
        * Write my own tools from scratch, even command line tools.
        * Try to use only what is in the default install plus vim and git!

================================================================================

Sun Feb  1 18:47:39 EST 2015

    Just about done cooking dinner with Julia. Made re-baked chicken and minced
    cacciatori. We just also came home from YMCA and ALDI. We were waived the 
    fee for membership of $100 and this month is pro-rated at $40, it will be
    $88 next month. We will be able to reimbursed by our Blue Cross insurance.

    At the Y, I first played rebounder for the kids at the basketball court, 
    lifted a few kettlebell presses and did a lunge, pushup, run circuit at the
    track for about 3 rounds. Got me breathing harder. I then finished with the
    hot whirlpool and almost 10 minutes at the sauna. Really hot. Got me sweat-
    ing. Stress relief.

    Superbowl Sunday!

    

================================================================================

Sun Feb  1 09:50:44 EST 2015

    Maybe having python on my OpenBSD machine will be "too much tech". A little
    history of programming languages by year from Wikipedia:

    1968 - Logo
    1969 - B (forerunner to C)
    1970 - Pascal
    1970 - Forth

    1972 - C
    1972 - Smalltalk
    1972 - Prolog

    1973 - ML
    1975 - Scheme
    1978 - SQL

    1980 - C++
    1983 - Ada
    1984 - Common Lisp

    1984 - MATLAB
    1985 - Eiffel
    1986 - Objective-C
    1986 - Erlang
    1987 - Perl

    1988 - Tcl
    1988 - Mathematica
    1989 - FL (Backus)

    Of these, I want be stuck in the 70's when C was relevent and still is 
    today. Maybe a sprinkle of some other tech here and there.

    I keep thinking how 70's and 80's programmers, especially 70's kept the
    coding fire burning. Maybe with good tape recorded music.

    For me now: a headphone and a good playlist at medium loud.


================================================================================

Sun Feb  1 09:37:41 EST 2015

    I am currently using tmux on my OpenBSD terminal to be my "window manager".
    It does not get any sweeter than this. Pure text bliss. Everything is text.
    This is one way of looking at programming also, especially if you work with
    languages like C or Python. Open file, open socket, read file, read bytes
    from stream, write to file, search through lists, arrays, files, etc...

    Text processing in the modern world. 

    I still have my MacBook at my side for music and "eye candy" or to have any
    distraction. Keep distractions on another machine or even a tablet. 
    Internet for my BSD machine will be for git, ssh and scp. Should I remove
    lynx then? Yes, I just did.

        # pkg_delete lynx

================================================================================

Sun Feb  1 01:50:42 EST 2015

    Making wireless usb work:

        Connect to internet and update firmware:
        # fw_update
            // Cool! this updated wpi and urtwn

        Configure network

        # ifconfig urtwn0 scan      // gets the nwid (network id)
        # ifconfig urtwn0 nwid "network-id" wpakey "passkey"
        # dhclient urtwn0           // or dhclient wpi0 if urtwn0 configured as
                                    // above

    Git configure
        Generate ssh key and then copy to Mac
        $ cd .ssh
        $ scp id_rsa.pub user@ip_address://Users/username/directory

        Init repo
        $ git remote add origin git@github.com:baloi/repository_name.git
        $ git push -u origin master

    THIS WORKS!! Will now sleep happily...
      

================================================================================

    Error setting up wifi:

    ERROR:
        failed to load firmware urtwn0 urtwn18192cfwT

    This error came up when trying to do:
        # dhclient urtwn0
    
    But I only found this error in dmesg:

        # dmesg | tail

    That is after I still could not connect to wifi even after all the 
    configuration I tried alread. It got a bit bloody. I had to read the man
    pages which actually was very helpful. A person I worked who used to own an
    ISP and still works with Linux told me to try "ifconfig" and go from there.
    He specifically said to try ifconfig and read the man page. Duh! 

    I am sometimes tempted to read stuff from the internet before referring to
    the man pages so I get bits and pieces of things and sometimes miss the big
    picture.

    Having a barebones machine has enabled me to look at the system and its
    internals more now. I even downloaded the OpenBSD source and tinkered with
    "ed" the line editor's source code. From running make I learned how to 
    compile multiple c files with the "-c" option to first make the object files
    then try something like:

        $ gcc -Wall -o program routines.o another_object.o main.c

    Now to read the gcc man pages....

    Man pages say running gcc with the "-c" option tells gcc not to do linking,
    so the output will be object files output by the assembler.

    Warning: GCC man page spits out a LOT OF STUFF.

    "When you invoke GCC, it normally does preprocessing, compilation, assembly
    and linking. " - man pages for gcc

================================================================================

Sun Feb  1 00:49:21 EST 2015

    Mounting usb stick:
        # sysctl hw.disknames   // to get the name

    Get more info:
        # disklabel sd0

    Mount:
        # mount /dev/sd0a /mnt/sd0


================================================================================

Thu Jan 29 22:26:38 EST 2015

    Working out. Started at 9:50 PM. Stretched hips and shoulders. 2 rounds of
lifts now. Amazon music on. Slowly lowering volume of music and TV. Getting 
pumped also about my coding...

    Main function in main.c of link_list data structure project. Have structure
templates ready with function pointers for possible struct functions...

    I now have to figure out how to test and implement these functions. Then
eventually use this linked list to store some items...

    Eventually did 3 rounds of strengthening exercises....

================================================================================

Thu Jan 29 18:52:55 EST 2015

    Created local git repository for my tinkering with containers in C:

      * Create 'git' user
      * Login as git, make project directory and then initialize directory

        $ mkdir containers.git
        $ cd containers.git
        $ git init --bare

      * Login as your user and clone bare repo

        $ cd ~/working/
        $ git clone git@localhost:/home/baloi/git/containers.git
        $ git add .
        $ git commit -m 'first commit'
        $ git push origin master
 
    UPDATE: This currently works for me!

================================================================================

Wed Jan 28 22:06:34 EST 2015

    After downloading the OpenBSD source code, I checked out the bin directory
and surprised to find directories for the commands like cat, cp, chmod, date,
dd, ln, ls, md5, ps, rm, even ed!

    Go into directory like ed and just issue command:
        
        $ make

    Or it seems we can just compile eachline with:
        
        $ cc -02 -pipe -DBACKWARDS -c filename.c
          ....
          # do for all c files
        $ cc -o program_name 1.o 2.o 3.o

================================================================================

Wed Jan 28 19:01:34 EST 2015

    The kids are still at St. John the Baptist church basketball court for prac-
tice. Julia is sick from too much cold from yesterday's sledding and working 
today at very cold temperatures.
    To download OpenBSD code via cvs:
    
    # cvs -qd anoncvs@anoncvs.ca.openbsd.org:/cvs get -P src

================================================================================

Tue Jan 27 21:59:25 EST 2015

    Standing while reading the book "The Unix Programming Enviroment". Ordered
Kernigan and Ritchie's "The C Programming Language". I want to work on the
samples there. Getting interested in the standard C library functions.


Tue Jan 27 19:24:29 EST 2015

    Finished workout in 40 minutes. Mostly dancing to 3 tunes free from Amazon:
Personal Jesus, Gonna Make You Sweat(Everybody ), The Power (Snap).
    Had a good dinner (shrimp, pork ribs menudo with atay, and pork curry. Also
cleaned some dishes with Janjan. Janjan regularly washes dishes. Bless him.


Tue Jan 27 18:02:14 EST 2015

    I finished work and went to Hannaford with Julia and Kenken. Spent $43 plus
Julia spent $15 on more food from Stewarts. More extra expenses. Good thing we
have something in the bank, but extra stuff has to be tapered starting now. 

    Going to work out in 5 minutes. Planning to do 30-45 minutes. Having a cut-
off for workouts is good so I know how to allot time for the task.
    Going now!

================================================================================

Tue Jan 27 07:41:04 EST 2015

        Installing packages:

        * Connect to LAN
        * # export PKG_PATH=ftp://ftp.openbsd.org/pub/OpenBSD/5.6/packages/i386/
        * # pkg_add vim

        Works!

        Setup global vimrc file:
        
        * # cp /usr/local/share/vim/vim74/vimrc_example.vim /usr/local/share/vimrc

        Install git:
        * # pkg_add git


================================================================================


Mon Jan 26 23:00:09 EST 2015
        
        This will be my log of what I have done with my BSD machine. I just 
installed this from my flash drive by doing the following:

  * downloaded install56.fs the OpenBSD website

  * erased contents of a flash drive using GUI diskutil

  * use command line diskutil to get current list of devices
    $  diskutil list

       // my flash drive was /dev/disk1

  * unmount flash drive
    $ diskutil unmountDisk /dev/disk1

  * wrote install56.fs to disk
    $ sudo dd if=install56.fs of=/dev/rdisk1 bs=1m

        // Note that using /dev/rdiskN instead of /dev/diskN may be faster

  * eject
    $ diskutil eject /dev/disk1

  * restart machine you want to install OpenBSD. Make sure that your flash drive 
is plugged in during boot.

        // Note: 
        //      Installation was easy and added user. Did not connect to the
        //      internet yet. This will be for the second install. gcc was 
        //      installed by default with vi also - makes it good. I just could 
        //      not find the sources yet. Maybe sources are not installed by 
        //      default. Installation took much less than 30 minutes. Felt like 
        //      10 minutes.

        Currently only vi and not vim is installed. No syntax highlighting, no
        auto complete, no expandtab, no retab. Bare bones. No Python even.

        Am I in trouble or what? "!!date command in vi works though for 
        timestamping so I am doing something right.
        
================================================================================
